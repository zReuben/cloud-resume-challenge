AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  LandingPage:
    Type: AWS::S3::Bucket
    Properties:
        WebsiteConfiguration:
            IndexDocument: index.html
        PublicAccessBlockConfiguration:
            BlockPublicAcls: true
            IgnorePublicAcls: true
            BlockPublicPolicy: false
            RestrictPublicBuckets: false

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH


  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z01586713VI3GCIKLX3QW
      RecordSets:
        - Name: reubenmulholland.com
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName
        - Name: www.reubenmulholland.com
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt WwwRedirectDistribution.DomainName
            #DNSName: !GetAtt MyDistribution.DomainName

  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
        DistributionConfig:
            Aliases:
              - reubenmulholland.com
            ViewerCertificate:
                AcmCertificateArn: !ImportValue ReubenCertificateArn
                SslSupportMethod: sni-only
            DefaultCacheBehavior:
                ViewerProtocolPolicy: redirect-to-https
                TargetOriginId: S3Origin
                DefaultTTL: 84600 # 1 day
                MinTTL: 0 # Kept at 0 to allow cache bursting when needed
                MaxTTL: 31536000 # 1 year (for long-lived assets like images/CSS
                ForwardedValues:
                    QueryString: false
            Origins:
              - DomainName: !GetAtt LandingPage.RegionalDomainName
                Id: S3Origin
                S3OriginConfig:
                    OriginAccessIdentity: ""
            Enabled: true
            DefaultRootObject: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LandingPage
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "${LandingPage.Arn}/*"

  GetVisitorCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get/
      Handler: handler.handler
      Runtime: python3.11
      Timeout: 5
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable
          FORCE_DEPLOY: "1"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: dynamodb:GetItem
              Resource: !GetAtt DynamoDBTable.Arn
      Events:
        GetVisitorCount:
          Type: Api
          Properties:
            Path: /visitor-count
            Method: GET
          Cors:
            AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
            AllowOrigin: "'https://reubenmulholland.com'"

  PostVisitorCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/post/
      Handler: handler.handler
      Runtime: python3.11
      Timeout: 5
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable
          FORCE_DEPLOY: "1"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: dynamodb:UpdateItem
              Resource: !GetAtt DynamoDBTable.Arn
      Events:
        PostVisitorCount:
          Type: Api
          Properties:
            Path: /visitor-count
            Method: ANY
          Cors:
            AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
            AllowOrigin: "'https://reubenmulholland.com'"

  PutVisitorCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/put/
      Handler: handler.handler
      Runtime: python3.11
      Timeout: 5
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable
          FORCE_DEPLOY: "1"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: dynamodb:PutItem
              Resource: !GetAtt DynamoDBTable.Arn
      Events:
        PutVisitorCount:
          Type: Api
          Properties:
            Path: /visitor-count
            Method: PUT
          Cors:
            AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
            AllowOrigin: "'https://reubenmulholland.com'"

  DeleteVisitorCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/delete/
      Handler: handler.handler
      Runtime: python3.11
      Timeout: 5
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable
          FORCE_DEPLOY: "1"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: dynamodb:DeleteItem
              Resource: !GetAtt DynamoDBTable.Arn
      Events:
        DeleteVisitorCount:
          Type: Api
          Properties:
            Path: /visitor-count
            Method: DELETE
          Cors:
            AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
            AllowOrigin: "'https://reubenmulholland.com'"

  WwwRedirectBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: www.reubenmulholland.com
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: reubenmulholland.com
          Protocol: https
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: false
        IgnorePublicAcls: true
        RestrictPublicBuckets: false

  WwwRedirectDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - www.reubenmulholland.com
        DefaultCacheBehavior:
          TargetOriginId: WwwRedirectOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
          ForwardedValues:
            QueryString: false
        ViewerCertificate:
          AcmCertificateArn: !ImportValue ReubenCertificateArn
          SslSupportMethod: sni-only
        Origins:
          - Id: WwwRedirectOrigin
            DomainName: www.reubenmulholland.com.s3-website-us-east-1.amazonaws.com
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  VisitorApiBaseUrl:
    Description: "Base URL for visitor-count GET endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/visitor-count"
  LandingPage:
    Description: "S3 bucket name for resume site"
    Value: !Ref LandingPage
    Export:
      Name: LandingPageBucketName
  CloudFrontDistributionId:
    Description: "ID of the CloudFront distribution"
    Value: !Ref MyDistribution

